def mvnHome
pipeline{
    agent none
    stages{
	  stage('Checkout code') {
	   agent {
	   label 'BuildServer'
	   }
	    steps{
	        checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'Github', url: 'https://github.com/gaddam146/Maven-Java-Project.git']]])
        script {
	   mvnHome = tool name: 'Maven', type: 'maven'
	   }
            }
           }
           stage('Static-Analysis') {
       agent {
	   label 'BuildServer'
	   }
        steps{
              sh " '${mvnHome}/bin/mvn' cobertura:cobertura"
             }
        post{
              success {
	      cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: ' **/target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
	      }
        }
          }
	 stage('Packaging-App'){
       agent {
	   label 'BuildServer'
	   }
        steps{
              sh " '${mvnHome}/bin/mvn' clean package"
             }
        post{
              success {
	      junit 'target/surefire-reports/*.xml'
	      }
        }
          }
    	stage('Deploy-to-Container'){
       agent {
	   label 'BuildServer'
	   }
        steps{
             deploy adapters: [tomcat9(credentialsId: 'TOMCAT', path: '', url: 'http://18.234.156.78:8080/')], contextPath: '*/target/*.war', war: 'webapp'
             }
   
          }  
    }
 }
